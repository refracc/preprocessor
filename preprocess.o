#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define LINE_LENGTH 1000

int main(int argc, char *argv[]) 
{
	char *input_file;

	if (argc == 3)
	{
		if (strcmp(argv[0], "-i"))
		{
			input_file = argv[2];
			FILE* input = fopen(input_file, "r"); 
			char line[LINE_LENGTH];
			int nonEmptyLines = 0;
			int commentedLines = 0;

			int i = 0;
			while (input_file[i] != '\0')
			{
				i++;
			}
			input_file[i - 2] = '\0';
			FILE* output = fopen(strcat(input_file, ".o"), "w"); 
			while (fgets(line, LINE_LENGTH, input) != NULL) 
			{
				if (!((line[0] == '\t')
					|| (line[0] == '\n')
					|| (line[0] == ' ')
					|| (line[0] == NULL))) 
				{
					nonEmptyLines++;
				}

				for (int i = 0; i < strlen(line); i++) 
				{
					if ((line[i] == '#' && line[i + 1] == 'i')
						|| (line[i] == '#' && line[i + 1] == ' ' && line[i + 2] == 'i')) 
					{
						printf("#include block found!\n");
					}

					if ((line[i] == '/') && (line[i + 1] == '/')) 
					{
						commentedLines++;
						line[i] = '\n';
						line[i + 1] = '\0';
					}
				}
				fputs(line, output);
			}
			fclose(input);
			fclose(output);
			printf("The total number of lines without comments: %d\n", nonEmptyLines);
			printf("The total number of line with comments (inline & standard): %d\n", commentedLines);
		}
	}
	else if (argc == 4)
	{
		if (strcmp(argv[2], "-c")) 
		{
			input_file = argv[2];
			FILE* input = fopen(input_file, "r"); 
			char line[LINE_LENGTH];
			int nonEmptyLines = 0;
			int commentedLines = 0;

			int i = 0;
			while (input_file[i] != '\0') 
			{
				i++;
			}
			input_file[i - 2] = '\0'; 

			FILE* output = fopen(strcat(input_file, ".o"), "w"); 
			while (fgets(line, LINE_LENGTH, input) != NULL) 
			{
				if (!((line[0] == '\t')
					|| (line[0] == '\n')
					|| (line[0] == ' ')
					|| (line[0] == NULL))) 
				{
					nonEmptyLines++; 
				}

				for (int i = 0; i < strlen(line); i++) 
				{
					if ((line[i] == '/') && (line[i + 1] == '/')) 
					{
						commentedLines++; 
					}
				}
				fputs(line, output);
			}
			fclose(input);
			fclose(output);
		}
	}
	return 0;
}

